{"version":3,"sources":["logo.svg","components/canvas/index.tsx","components/button/index.tsx","components/workspace/index.tsx","components/splash/index.tsx","components/app/index.tsx","service-worker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Canvas","state","canvasContext","canvasRect","isPainting","prevX","prevY","handleMouse","event","preventDefault","_this","setState","buttons","mousePaint","paint","clientX","clientY","handleTouch","touches","length","touchPaint","Array","from","_touches$reduce","reduce","acc","touch","current","props","canvasRef","_this$state","ctx","_ref","x","y","width","height","canvas","console","warn","fillX","fillY","moveTo","lineTo","stroke","_this2","this","_this$props","fetchPainting","then","file","data","JSON","parse","img","Image","src","onload","drawImage","getContext","getBoundingClientRect","react_default","a","createElement","ref","className","onMouseEnter","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","Component","Button","children","onClick","Workspace","person","savePainting","signOut","name","components_button","Splash","signIn","logo","alt","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","React","createRef","userSession","_window$location","window","location","origin","pathname","redirectToSignIn","concat","signUserOut","_window$location2","assign","putFile","stringify","toDataURL","createdAt","Date","now","encrypt","getFile","decrypt","Promise","resolve","appConfig","AppConfig","UserSession","isSignInPending","handlePendingSignIn","_window$location3","isUserSignedIn","workspace","Person","loadUserData","profile","splash","Boolean","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8733a195.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02b2068a.svg\";","import React, { Component, MouseEvent, RefObject, TouchEvent } from 'react';\n\nimport './style.css';\n\ntype CanvasProps = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  fetchPainting: () => Promise<string | ArrayBuffer>;\n};\n\ntype CanvasState = {\n  canvasContext: CanvasRenderingContext2D | null;\n  canvasRect: ClientRect | DOMRect | null;\n  isPainting: boolean;\n  prevX: number;\n  prevY: number;\n};\n\nclass Canvas extends Component<CanvasProps, CanvasState> {\n  public state = {\n    canvasContext: null,\n    canvasRect: null,\n    isPainting: false,\n    prevX: -1,\n    prevY: -1,\n  };\n\n  public componentDidMount() {\n    const {\n      canvasRef: { current },\n      fetchPainting,\n    } = this.props;\n\n    if (!(current && fetchPainting)) {\n      return;\n    }\n\n    fetchPainting().then(file => {\n      const { data } = JSON.parse((file as string) || '{}');\n\n      if (!data) {\n        return;\n      }\n\n      const { canvasContext } = this.state;\n\n      if (!canvasContext) {\n        return;\n      }\n\n      const ctx = canvasContext as CanvasRenderingContext2D;\n\n      const img = new Image(current.width, current.height);\n      img.src = data;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0);\n      };\n    });\n\n    this.setState({\n      canvasContext: current.getContext('2d'),\n      canvasRect: current.getBoundingClientRect(),\n    });\n  }\n\n  public render() {\n    const { canvasRef } = this.props;\n\n    return (\n      <canvas\n        ref={canvasRef}\n        className=\"canvas\"\n        width=\"1080\"\n        height=\"1080\"\n        // mouse event handlers\n        onMouseEnter={this.handleMouse}\n        onMouseDown={this.handleMouse}\n        onMouseMove={this.mousePaint}\n        onMouseUp={this.handleMouse}\n        onMouseLeave={this.handleMouse}\n        // touch event handlers\n        onTouchStart={this.handleTouch}\n        onTouchMove={this.touchPaint}\n        onTouchEnd={this.handleTouch}\n      />\n    );\n  }\n\n  private handleMouse = (event: MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    this.setState({ isPainting: event.buttons !== 0, prevX: -1, prevY: -1 });\n  };\n\n  private mousePaint = (event: MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    this.paint(event.clientX, event.clientY);\n  };\n\n  private handleTouch = (event: TouchEvent<HTMLCanvasElement>) => {\n    /**\n     * Unable to preventDefault inside passive event listener due to target\n     * being treated as passive.\n     *\n     * @see: https://www.chromestatus.com/features/5093566007214080\n     */\n    // event.preventDefault();\n    this.setState({\n      isPainting: event.touches.length !== 0,\n      prevX: -1,\n      prevY: -1,\n    });\n  };\n\n  private touchPaint = (event: TouchEvent<HTMLCanvasElement>) => {\n    /**\n     * Unable to preventDefault inside passive event listener due to target\n     * being treated as passive.\n     *\n     * @see: https://www.chromestatus.com/features/5093566007214080\n     */\n    // event.preventDefault();\n    const touches = Array.from(event.touches);\n\n    // handle multiple touches by averaging them, will sort of draw \"in the\n    // middle\" of all the touches\n    const { clientX, clientY } = touches.reduce(\n      (acc, touch) => ({\n        clientX: acc.clientX + touch.clientX,\n        clientY: acc.clientY + touch.clientY,\n      }),\n      {\n        clientX: 0,\n        clientY: 0,\n      },\n    );\n\n    this.paint(clientX / touches.length, clientY / touches.length);\n  };\n\n  private paint = (clientX: number, clientY: number) => {\n    const {\n      canvasRef: { current },\n    } = this.props;\n    const { canvasContext, canvasRect, isPainting, prevX, prevY } = this.state;\n\n    if (!(current && canvasContext && canvasRect && isPainting)) {\n      return;\n    }\n\n    /**\n     * casting because TypeScript can't follow these being set and so thinks\n     * that they're the 'never' type\n     *\n     * @see: https://github.com/Microsoft/TypeScript/issues/11498\n     */\n    const ctx = canvasContext as CanvasRenderingContext2D;\n    const { x, y, width, height } = canvasRect as DOMRect;\n\n    if (ctx.canvas !== current) {\n      console.warn(\n        \"refs out of sync, rendering into a canvas that isn't in the DOM\",\n      );\n    }\n\n    const fillX = (clientX - x) * (current.width / width);\n    const fillY = (clientY - y) * (current.height / height);\n\n    if (prevX !== -1 && prevY !== -1) {\n      ctx.moveTo(prevX, prevY);\n      ctx.lineTo(fillX, fillY);\n      ctx.stroke();\n    }\n\n    this.setState({ prevX: fillX, prevY: fillY });\n  };\n}\n\nexport default Canvas;\n","import React, { FC, DOMAttributes } from 'react';\nimport './style.css';\n\ntype ButtonProps = DOMAttributes<HTMLButtonElement> & {};\n\nconst Button: FC<ButtonProps> = ({ children, onClick }) => (\n  <button className=\"button\" onClick={onClick}>\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { FC, MouseEvent, RefObject } from 'react';\nimport { Person } from 'blockstack';\n\nimport Canvas from '../canvas';\n\nimport './style.css';\nimport Button from '../button';\n\ntype WorkspaceProps = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  fetchPainting: () => Promise<string | ArrayBuffer>;\n  person: Person;\n  savePainting: (event: MouseEvent<HTMLButtonElement>) => void;\n  signOut: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Workspace: FC<WorkspaceProps> = ({\n  canvasRef,\n  fetchPainting,\n  person,\n  savePainting,\n  signOut,\n}) => (\n  <div className=\"workspace\">\n    <header className=\"header\">\n      <h2 className=\"current-user\">\n        Signed in as {person.name() || 'nameless person'}\n      </h2>\n      <Button onClick={signOut}>Sign out</Button>\n    </header>\n    <Canvas canvasRef={canvasRef} fetchPainting={fetchPainting} />\n    <footer className=\"footer\">\n      <i />\n      <Button onClick={savePainting}>Save</Button>\n    </footer>\n  </div>\n);\n\nexport default Workspace;\n","import React, { FC, MouseEvent } from 'react';\n\nimport Button from '../button';\n\nimport './style.css';\n\nimport logo from '../../logo.svg';\n\ntype SplashProps = {\n  signIn: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Splash: FC<SplashProps> = ({ signIn }) => (\n  <header className=\"splash\">\n    <img src={logo} className=\"splash-logo\" alt=\"logo\" />\n    <Button onClick={signIn}>Sign in</Button>\n  </header>\n);\n\nexport default Splash;\n","import React, { Component, MouseEvent } from 'react';\nimport { AppConfig, Person, UserSession } from 'blockstack';\n\nimport './style.css';\nimport Workspace from '../workspace';\nimport Splash from '../splash';\n\ntype AppState = {\n  appConfig: AppConfig;\n  userSession: UserSession;\n};\n\nclass App extends Component<{}, AppState> {\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n\n  constructor(props: {}) {\n    super(props);\n\n    const appConfig = new AppConfig(['store_write', 'publish_data']);\n    const userSession = new UserSession({ appConfig });\n\n    this.state = {\n      appConfig,\n      userSession,\n    };\n  }\n\n  signIn = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const { userSession } = this.state;\n\n    /**\n     * @see: https://github.com/zone117x/blockstack-monero/blob/master/src/main.ts#L40-L46\n     */\n    const { origin, pathname } = window.location;\n    userSession.redirectToSignIn(\n      `${origin}${pathname}`,\n      `${origin}${pathname}manifest.json`,\n    );\n  };\n\n  signOut = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const { userSession } = this.state;\n\n    userSession.signUserOut();\n    const { origin, pathname } = window.location;\n    window.location.assign(`${origin}${pathname}`);\n  };\n\n  savePainting = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const { userSession } = this.state;\n    const { current } = this.canvasRef;\n\n    if (!current) {\n      return;\n    }\n\n    userSession.putFile(\n      'painting.json',\n      JSON.stringify({\n        data: current.toDataURL('image/png'),\n        createdAt: Date.now(),\n      }),\n      {\n        encrypt: false,\n      },\n    );\n  };\n\n  fetchPainting = () => {\n    const { userSession } = this.state;\n    const { current } = this.canvasRef;\n\n    return !current\n      ? Promise.resolve(JSON.stringify({}))\n      : userSession.getFile('painting.json', {\n          decrypt: false,\n        });\n  };\n\n  UNSAFE_componentWillMount() {\n    const { userSession } = this.state;\n\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then((/* userData */) => {\n        const { origin, pathname } = window.location;\n        window.location.assign(`${origin}${pathname}`);\n      });\n    }\n  }\n\n  render() {\n    const { userSession } = this.state;\n\n    return (\n      <div className=\"app\">\n        {userSession.isUserSignedIn() ? (\n          <Workspace\n            canvasRef={this.canvasRef}\n            fetchPainting={this.fetchPainting}\n            person={new Person(userSession.loadUserData().profile)}\n            savePainting={this.savePainting}\n            signOut={this.signOut}\n          />\n        ) : (\n          <Splash signIn={this.signIn} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\nimport * as serviceWorker from './service-worker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}