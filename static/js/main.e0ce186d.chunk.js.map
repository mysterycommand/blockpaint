{"version":3,"sources":["logo.svg","components/tools/index.tsx","components/loader/index.tsx","components/button/index.tsx","components/icons/paint/index.tsx","components/icons/erase/index.tsx","components/canvas/state.ts","components/canvas/effects.ts","components/canvas/index.tsx","components/workspace/index.tsx","components/splash/index.tsx","components/app/index.tsx","service-worker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ToolType","Loader","react_default","a","createElement","className","Button","_ref","children","disabled","onClick","loader","Paint","width","height","viewBox","preserveAspectRatio","xmlns","d","Erase","Tools","currentTool","setCurrentTool","type","id","name","checked","onChange","htmlFor","icons_paint","erase","useCanvasState","canvasRef","fetchPainting","_useState","useState","_useState2","Object","slicedToArray","canvasContext","setCanvasContext","_useState3","_useState4","canvasRect","setCanvasRect","_useState5","_useState6","isPainting","setIsPainting","_useState7","_useState8","prevX","setPrevX","_useState9","_useState10","prevY","setPrevY","handleMouse","event","preventDefault","buttons","handleTouch","touches","length","paint","clientX","clientY","current","_ref2","x","y","fillX","fillY","beginPath","moveTo","lineTo","stroke","useEffect","getContext","useCanvasContext","getBoundingClientRect","useCanvasRect","_ref3","memoizedFetchPainting","useCallback","then","file","data","JSON","parse","img","Image","src","onload","drawImage","useFetchedPainting","_ref4","strokeStyle","lineWidth","lineCap","lineJoin","useCurrentTool","onMouseEnter","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","Array","from","_touches$reduce","reduce","acc","touch","onTouchEnd","Canvas","props","eventHandlers","assign","ref","Workspace","isFetching","isSaving","person","savePainting","signOut","components_button","tools","Splash","signIn","logo","alt","appConfig","AppConfig","userSession","UserSession","Boolean","window","location","hostname","match","ReactDOM","render","setIsFetching","setIsSaving","useRef","isSignInPending","handlePendingSignIn","_window$location","origin","pathname","concat","isUserSignedIn","workspace","getFile","decrypt","Promise","resolve","stringify","Person","loadUserData","profile","putFile","toDataURL","createdAt","Date","now","encrypt","signUserOut","_window$location3","splash","_window$location2","redirectToSignIn","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wYCK5BC,oDCiBGC,UAjBiB,kBAC9BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,eCHWE,UAPiB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,SAAUC,EAAvBH,EAAuBG,QAAvB,OAC9BR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASK,QAASA,EAASD,SAAUA,GACpDD,EACAC,GAAYP,EAAAC,EAAAC,cAACO,EAAD,SCOFC,wBAbe,kBAC5BV,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVQ,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,oBAAoB,gBACpBC,MAAM,8BAENf,EAAAC,EAAAC,cAAA,QAAMc,EAAE,uRCIGC,EAbe,kBAC5BjB,EAAAC,EAAAC,cAAA,OACEC,UAAU,aACVQ,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,oBAAoB,gBACpBC,MAAM,8BAENf,EAAAC,EAAAC,cAAA,QAAMc,EAAE,oTJTAlB,+CAUZ,IA6BeoB,EA7Be,SAAAb,GAAA,IAAGc,EAAHd,EAAGc,YAAaC,EAAhBf,EAAgBe,eAAhB,OAC5BpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,QAASL,IAAgBrB,EAASY,MAClCe,SAAU,kBAAML,EAAetB,EAASY,UAE1CV,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,SACb1B,EAAAC,EAAAC,cAACyB,EAAD,QAGJ3B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACEmB,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,QAASL,IAAgBrB,EAASmB,MAClCQ,SAAU,kBAAML,EAAetB,EAASmB,UAE1CjB,EAAAC,EAAAC,cAAA,SAAOwB,QAAQ,SACb1B,EAAAC,EAAAC,cAAC0B,EAAD,UK1BD,SAASC,EAATxB,GAIS,IAHdyB,EAGczB,EAHdyB,UACAC,EAEc1B,EAFd0B,cACAZ,EACcd,EADdc,YACca,EAC4BC,mBAAwB,MADpDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACPK,EADOH,EAAA,GACQI,EADRJ,EAAA,GAAAK,EAEsBN,mBAAqB,MAF3CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEPE,EAFOD,EAAA,GAEKE,EAFLF,EAAA,GAAAG,EAGsBV,oBAAS,GAH/BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGPE,EAHOD,EAAA,GAGKE,EAHLF,EAAA,GAAAG,EAIYd,oBAAU,GAJtBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAIPE,EAJOD,EAAA,GAIAE,EAJAF,EAAA,GAAAG,EAKYlB,oBAAU,GALtBmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAKPE,EALOD,EAAA,GAKAE,EALAF,EAAA,GAYd,SAASG,EAAYC,GACnBA,EAAMC,iBACNX,EAAgC,IAAlBU,EAAME,SACpBR,GAAU,GACVI,GAAU,GAQZ,SAASK,EAAYH,GAEnBV,EAAuC,IAAzBU,EAAMI,QAAQC,QAC5BX,GAAU,GACVI,GAAU,GAuBZ,SAASQ,EAAMC,EAAiBC,GAC9B,GAEInB,GACAf,GACAA,EAAUmC,SACV5B,GACAI,EANJ,CAD+C,IAAAyB,EAafzB,EAAxB0B,EAbuCD,EAavCC,EAAGC,EAboCF,EAapCE,EAAGzD,EAbiCuD,EAajCvD,MAAOC,EAb0BsD,EAa1BtD,OACfyD,GAASN,EAAUI,IAAMrC,EAAUmC,QAAQtD,MAAQA,GACnD2D,GAASN,EAAUI,IAAMtC,EAAUmC,QAAQrD,OAASA,IAE3C,IAAXqC,IAA2B,IAAXI,EAClBhB,EAAckC,aAEdlC,EAAcmC,OAAOvB,EAAOI,GAC5BhB,EAAcoC,OAAOJ,EAAOC,GAC5BjC,EAAcqC,UAGhBxB,EAASmB,GACTf,EAASgB,IAGX,OCpFK,SAAAjE,GAMJ,IALDyB,EAKCzB,EALDyB,UACAQ,EAICjC,EAJDiC,iBAKAqC,oBAAU,WACF7C,GAAaA,EAAUmC,SAI7B3B,EAAiBR,EAAUmC,QAAQW,WAAW,QAC7C,CAAC9C,EAAWQ,IDFfuC,CAAiB,CAAEvC,mBAAkBR,cCKhC,SAAAoC,GAMJ,IALDpC,EAKCoC,EALDpC,UACAY,EAICwB,EAJDxB,cAKAiC,oBAAU,WACF7C,GAAaA,EAAUmC,SAI7BvB,EAAcZ,EAAUmC,QAAQa,0BAC/B,CAAChD,EAAWY,IDjBfqC,CAAc,CAAErC,gBAAeZ,cCoB1B,SAAAkD,GAQJ,IAPDlD,EAOCkD,EAPDlD,UACAC,EAMCiD,EANDjD,cACAM,EAKC2C,EALD3C,cAMM4C,EAAwBC,sBAAYnD,EAAe,IAEzD4C,oBAAU,WACHtC,GAIL4C,IAAwBE,KAAK,SAAAC,GAC3B,GAAMtD,GAAaA,EAAUmC,QAA7B,CADmC,IAK3BoB,EAASC,KAAKC,MAAMH,GAApBC,KACR,GAAKA,EAAL,CAIA,IAAMG,EAAM,IAAIC,MAAM3D,EAAUmC,QAAQtD,MAAOmB,EAAUmC,QAAQrD,QACjE4E,EAAIE,IAAML,EACVG,EAAIG,OAAS,WACXtD,EAAcuD,UAAUJ,EAAK,EAAG,SAGnC,CAAC1D,EAAWO,EAAe4C,IDnD9BY,CAAmB,CAAE/D,YAAWO,gBAAeN,kBCsD1C,SAAA+D,GAMJ,IALD3E,EAKC2E,EALD3E,YACAkB,EAICyD,EAJDzD,cAKAsC,oBAAU,WACHtC,IAILA,EAAc0D,YACZ5E,IAAgBrB,EAASY,MAAQ,QAAU,QAC7C2B,EAAc2D,UAAY7E,IAAgBrB,EAASY,MAAQ,EAAI,GAC/D2B,EAAc4D,QAAU,QACxB5D,EAAc6D,SAAW,UACxB,CAAC7D,EAAelB,IDtEnBgF,CAAe,CAAEhF,cAAakB,kBAsEvB,CAEL+D,aAAc7C,EACd8C,YAAa9C,EACb+C,YAjEF,SAAoB9C,GAClBA,EAAMC,iBACNK,EAAMN,EAAMO,QAASP,EAAMQ,UAgE3BuC,UAAWhD,EACXiD,aAAcjD,EAEdkD,aAAc9C,EACd+C,YA1DF,SAAoBlD,GAElB,IAAMI,EAAU+C,MAAMC,KAAKpD,EAAMI,SAFuBiD,EAM3BjD,EAAQkD,OACnC,SAACC,EAAKC,GAAN,MAAiB,CACfjD,QAASgD,EAAIhD,QAAUiD,EAAMjD,QAC7BC,QAAS+C,EAAI/C,QAAUgD,EAAMhD,UAE/B,CACED,QAAS,EACTC,QAAS,IAPLD,EANgD8C,EAMhD9C,QAASC,EANuC6C,EAMvC7C,QAWjBF,EAAMC,EAAUH,EAAQC,OAAQG,EAAUJ,EAAQC,SA0ClDoD,WAAYtD,GEnGD,SAASuD,EAAOC,GAC7B,IAAMC,EAAgBvF,EAAesF,GAErC,OACEnH,EAAAC,EAAAC,cAAA,SAAAiC,OAAAkF,OAAA,CACEC,IAAKH,EAAMrF,UACX3B,UAAU,SACVQ,MAAM,OACNC,OAAO,QACHwG,eC6CKG,EAvCuB,SAAAlH,GAAA,IACpCyB,EADoCzB,EACpCyB,UACAX,EAFoCd,EAEpCc,YACAY,EAHoC1B,EAGpC0B,cACAyF,EAJoCnH,EAIpCmH,WACAC,EALoCpH,EAKpCoH,SACAC,EANoCrH,EAMpCqH,OACAC,EAPoCtH,EAOpCsH,aACAvG,EARoCf,EAQpCe,eACAwG,EAToCvH,EASpCuH,QAToC,OAWpC5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,gBACgBuH,EAAOnG,QAAU,mBAEjCvB,EAAAC,EAAAC,cAAC2H,EAAD,CAAQrH,QAASoH,GAAjB,aAEF5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACgH,EAAD,CACEpF,UAAWA,EACXX,YAAaA,EACbY,cAAeA,IAEhByF,GACCxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACO,EAAD,QAINT,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAC4H,EAAD,CAAO3G,YAAaA,EAAaC,eAAgBA,IACjDpB,EAAAC,EAAAC,cAAC2H,EAAD,CAAQrH,QAASmH,EAAcpH,SAAUkH,GAAzC,sCCnCSM,EAPiB,SAAA1H,GAAA,IAAG2H,EAAH3H,EAAG2H,OAAH,OAC9BhI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,OAAKwF,IAAKuC,IAAM9H,UAAU,cAAc+H,IAAI,SAC5ClI,EAAAC,EAAAC,cAAC2H,EAAD,CAAQrH,QAASwH,GAAjB,gCCNEG,UAAY,IAAIC,YAAU,CAAC,cAAe,kBAC1CC,EAAc,IAAIC,cAAY,CAAEH,cCElBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECVNC,IAASC,OAAO7I,EAAAC,EAAAC,cFID,WAAe,IAAA8B,EACUC,mBAASnC,EAASY,OAD5BwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrBb,EADqBe,EAAA,GACRd,EADQc,EAAA,GAAAK,EAEQN,oBAAS,GAFjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAErBiF,EAFqBhF,EAAA,GAETsG,EAFStG,EAAA,GAAAG,EAGIV,oBAAS,GAHbW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGrB8E,EAHqB7E,EAAA,GAGXmG,EAHWnG,EAAA,GAKtBd,EAAYkH,iBAA0B,MA0E5C,OAxEArE,oBAAU,WACH0D,EAAYY,mBAIjBZ,EAAYa,sBAAsB/D,KAAK,WAAoB,IAAAgE,EAC5BX,OAAOC,SAA5BW,EADiDD,EACjDC,OAAQC,EADyCF,EACzCE,SAChBb,OAAOC,SAASpB,OAAhB,GAAAiC,OAA0BF,GAA1BE,OAAmCD,QAkErCrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZkI,EAAYkB,iBACXvJ,EAAAC,EAAAC,cAACsJ,EAAD,CACErI,YAAaA,EACbW,UAAWA,EACXC,cA9CR,WAAyB,IACfkC,EAAYnC,EAAZmC,QAGR,OADA6E,GAAc,IACL7E,EAELoE,EAAYoB,QAAQ,gBAAiB,CACnCC,SAAS,IAFXC,QAAQC,QAAQtE,KAAKuE,UAAU,MAIjC1E,KAAK,SAAAC,GAEL,OADA0D,GAAc,GACP1D,KAoCHoC,WAAYA,EACZC,SAAUA,EACVC,OAAQ,IAAIoC,SAAOzB,EAAY0B,eAAeC,SAC9CrC,aAnCR,SAAsBnE,GACpBA,EAAMC,iBADoD,IAGlDQ,EAAYnC,EAAZmC,QACHA,IAIL8E,GAAY,GACZV,EACG4B,QACC,gBACA3E,KAAKuE,UAAU,CACbxE,KAAMpB,EAAQiG,UAAU,aACxBC,UAAWC,KAAKC,QAElB,CACEC,SAAS,IAGZnF,KAAK,WACJ4D,GAAY,OAeV3H,eAAgBA,EAChBwG,QA5DR,SAAiBpE,GACfA,EAAMC,iBAEN4E,EAAYkC,cAHyC,IAAAC,EAIxBhC,OAAOC,SAA5BW,EAJ6CoB,EAI7CpB,OAAQC,EAJqCmB,EAIrCnB,SAChBb,OAAOC,SAASpB,OAAhB,GAAAiC,OAA0BF,GAA1BE,OAAmCD,OA0D/BrJ,EAAAC,EAAAC,cAACuK,EAAD,CAAQzC,OA5Ed,SAAgBxE,GACdA,EAAMC,iBAD8C,IAAAiH,EAMvBlC,OAAOC,SAA5BW,EAN4CsB,EAM5CtB,OAAQC,EANoCqB,EAMpCrB,SAChBhB,EAAYsC,iBAAZ,GAAArB,OACKF,GADLE,OACcD,GADd,GAAAC,OAEKF,GAFLE,OAEcD,EAFd,uBE7BY,MAASuB,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,KAAK,SAAA8F,GACjCA,EAAaC","file":"static/js/main.e0ce186d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02b2068a.svg\";","import React, { FC } from 'react';\nimport './style.css';\nimport Paint from '../icons/paint';\nimport Erase from '../icons/erase';\n\nexport enum ToolType {\n  Paint = 'paint',\n  Erase = 'erase',\n}\n\ntype ToolsProps = {\n  currentTool: ToolType;\n  setCurrentTool: (tool: ToolType) => void;\n};\n\nconst Tools: FC<ToolsProps> = ({ currentTool, setCurrentTool }) => (\n  <ul className=\"tools\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"paint\"\n        name=\"tools\"\n        checked={currentTool === ToolType.Paint}\n        onChange={() => setCurrentTool(ToolType.Paint)}\n      />\n      <label htmlFor=\"paint\">\n        <Paint />\n      </label>\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        id=\"erase\"\n        name=\"tools\"\n        checked={currentTool === ToolType.Erase}\n        onChange={() => setCurrentTool(ToolType.Erase)}\n      />\n      <label htmlFor=\"erase\">\n        <Erase />\n      </label>\n    </li>\n  </ul>\n);\n\nexport default Tools;\n","import React, { FC } from 'react';\nimport './style.css';\n\ntype LoaderProps = {};\n\nconst Loader: FC<LoaderProps> = () => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import React, { FC, ButtonHTMLAttributes } from 'react';\n\nimport Loader from '../loader';\n\nimport './style.css';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {};\n\nconst Button: FC<ButtonProps> = ({ children, disabled, onClick }) => (\n  <button className=\"button\" onClick={onClick} disabled={disabled}>\n    {children}\n    {disabled && <Loader />}\n  </button>\n);\n\nexport default Button;\n","import React, { FC } from 'react';\nimport '../style.css';\n\ntype PaintProps = {};\n\nconst Paint: FC<PaintProps> = () => (\n  <svg\n    className=\"icon paint\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2zM5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6l1.95-2zm-8.9 8.91L12 7.32l2.7 2.7-5.6 5.6-3 .28.27-2.99z\" />\n  </svg>\n);\n\nexport default Paint;\n","import React, { FC } from 'react';\nimport '../style.css';\n\ntype EraseProps = {};\n\nconst Erase: FC<EraseProps> = () => (\n  <svg\n    className=\"icon erase\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2zm-.009-17.942h-.09l-4.17.38a2 2 0 0 0-1.21.57l-9 9a1.92 1.92 0 0 0 .07 2.71l2.74 2.74a2 2 0 0 0 2.66.07l9-9a2 2 0 0 0 .57-1.21l.43-4.17a1 1 0 0 0-1-1.09zm-10.27 14l-2.73-2.73 2-1.95 2.68 2.68-1.95 2zm8.9-8.91l-5.63 5.59-2.7-2.7 5.6-5.6 3-.28-.27 2.99z\" />\n  </svg>\n);\n\nexport default Erase;\n","import { MouseEvent, TouchEvent, useState } from 'react';\n\nimport { CanvasProps } from './props';\nimport {\n  CanvasContext,\n  CanvasRect,\n  useCanvasContext,\n  useCanvasRect,\n  useFetchedPainting,\n  useCurrentTool,\n} from './effects';\n\nexport function useCanvasState({\n  canvasRef,\n  fetchPainting,\n  currentTool,\n}: CanvasProps) {\n  const [canvasContext, setCanvasContext] = useState<CanvasContext>(null);\n  const [canvasRect, setCanvasRect] = useState<CanvasRect>(null);\n  const [isPainting, setIsPainting] = useState(false);\n  const [prevX, setPrevX] = useState(-1);\n  const [prevY, setPrevY] = useState(-1);\n\n  useCanvasContext({ setCanvasContext, canvasRef });\n  useCanvasRect({ setCanvasRect, canvasRef });\n  useFetchedPainting({ canvasRef, canvasContext, fetchPainting });\n  useCurrentTool({ currentTool, canvasContext });\n\n  function handleMouse(event: MouseEvent<HTMLCanvasElement>) {\n    event.preventDefault();\n    setIsPainting(event.buttons !== 0);\n    setPrevX(-1);\n    setPrevY(-1);\n  }\n\n  function mousePaint(event: MouseEvent<HTMLCanvasElement>) {\n    event.preventDefault();\n    paint(event.clientX, event.clientY);\n  }\n\n  function handleTouch(event: TouchEvent<HTMLCanvasElement>) {\n    // event.preventDefault();\n    setIsPainting(event.touches.length !== 0);\n    setPrevX(-1);\n    setPrevY(-1);\n  }\n\n  function touchPaint(event: TouchEvent<HTMLCanvasElement>) {\n    // event.preventDefault();\n    const touches = Array.from(event.touches);\n\n    // handle multiple touches by averaging them, will sort of draw \"in the\n    // middle\" of all the touches\n    const { clientX, clientY } = touches.reduce(\n      (acc, touch) => ({\n        clientX: acc.clientX + touch.clientX,\n        clientY: acc.clientY + touch.clientY,\n      }),\n      {\n        clientX: 0,\n        clientY: 0,\n      },\n    );\n\n    paint(clientX / touches.length, clientY / touches.length);\n  }\n\n  function paint(clientX: number, clientY: number) {\n    if (\n      !(\n        isPainting &&\n        canvasRef &&\n        canvasRef.current &&\n        canvasContext &&\n        canvasRect\n      )\n    ) {\n      return;\n    }\n\n    const { x, y, width, height } = canvasRect as DOMRect;\n    const fillX = (clientX - x) * (canvasRef.current.width / width);\n    const fillY = (clientY - y) * (canvasRef.current.height / height);\n\n    if (prevX === -1 && prevY === -1) {\n      canvasContext.beginPath();\n    } else {\n      canvasContext.moveTo(prevX, prevY);\n      canvasContext.lineTo(fillX, fillY);\n      canvasContext.stroke();\n    }\n\n    setPrevX(fillX);\n    setPrevY(fillY);\n  }\n\n  return {\n    // mouse event handlers\n    onMouseEnter: handleMouse,\n    onMouseDown: handleMouse,\n    onMouseMove: mousePaint,\n    onMouseUp: handleMouse,\n    onMouseLeave: handleMouse,\n    // touch event handlers\n    onTouchStart: handleTouch,\n    onTouchMove: touchPaint,\n    onTouchEnd: handleTouch,\n  };\n}\n","import {\n  Dispatch,\n  SetStateAction,\n  RefObject,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { ToolType } from '../tools';\n\nexport type CanvasContext = CanvasRenderingContext2D | null;\nexport type CanvasRect = DOMRect | ClientRect | null;\n\nexport function useCanvasContext({\n  canvasRef,\n  setCanvasContext,\n}: {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  setCanvasContext: Dispatch<SetStateAction<CanvasContext>>;\n}) {\n  useEffect(() => {\n    if (!(canvasRef && canvasRef.current)) {\n      return;\n    }\n\n    setCanvasContext(canvasRef.current.getContext('2d'));\n  }, [canvasRef, setCanvasContext]);\n}\n\nexport function useCanvasRect({\n  canvasRef,\n  setCanvasRect,\n}: {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  setCanvasRect: Dispatch<SetStateAction<CanvasRect>>;\n}) {\n  useEffect(() => {\n    if (!(canvasRef && canvasRef.current)) {\n      return;\n    }\n\n    setCanvasRect(canvasRef.current.getBoundingClientRect());\n  }, [canvasRef, setCanvasRect]);\n}\n\nexport function useFetchedPainting({\n  canvasRef,\n  fetchPainting,\n  canvasContext,\n}: {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  fetchPainting: () => Promise<string>;\n  canvasContext: CanvasContext;\n}) {\n  const memoizedFetchPainting = useCallback(fetchPainting, []);\n\n  useEffect(() => {\n    if (!canvasContext) {\n      return;\n    }\n\n    memoizedFetchPainting().then(file => {\n      if (!(canvasRef && canvasRef.current)) {\n        return;\n      }\n\n      const { data } = JSON.parse(file);\n      if (!data) {\n        return;\n      }\n\n      const img = new Image(canvasRef.current.width, canvasRef.current.height);\n      img.src = data;\n      img.onload = () => {\n        canvasContext.drawImage(img, 0, 0);\n      };\n    });\n  }, [canvasRef, canvasContext, memoizedFetchPainting]);\n}\n\nexport function useCurrentTool({\n  currentTool,\n  canvasContext,\n}: {\n  currentTool: ToolType;\n  canvasContext: CanvasContext;\n}) {\n  useEffect(() => {\n    if (!canvasContext) {\n      return;\n    }\n\n    canvasContext.strokeStyle =\n      currentTool === ToolType.Paint ? 'black' : 'white';\n    canvasContext.lineWidth = currentTool === ToolType.Paint ? 4 : 24;\n    canvasContext.lineCap = 'round';\n    canvasContext.lineJoin = 'round';\n  }, [canvasContext, currentTool]);\n}\n","import React from 'react';\n\nimport './style.css';\n\nimport { CanvasProps } from './props';\nimport { useCanvasState } from './state';\n\nexport default function Canvas(props: CanvasProps) {\n  const eventHandlers = useCanvasState(props);\n\n  return (\n    <canvas\n      ref={props.canvasRef}\n      className=\"canvas\"\n      width=\"1080\"\n      height=\"1080\"\n      {...eventHandlers}\n    />\n  );\n}\n","import React, { FC, MouseEvent, RefObject } from 'react';\nimport { Person } from 'blockstack';\n\nimport Button from '../button';\nimport Canvas from '../canvas';\nimport Loader from '../loader';\n\nimport './style.css';\nimport Tools, { ToolType } from '../tools';\n\ntype WorkspaceProps = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  currentTool: ToolType;\n  fetchPainting: () => Promise<string>;\n  isFetching: boolean;\n  isSaving: boolean;\n  person: Person;\n  savePainting: (event: MouseEvent<HTMLButtonElement>) => void;\n  setCurrentTool: (tool: ToolType) => void;\n  signOut: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Workspace: FC<WorkspaceProps> = ({\n  canvasRef,\n  currentTool,\n  fetchPainting,\n  isFetching,\n  isSaving,\n  person,\n  savePainting,\n  setCurrentTool,\n  signOut,\n}) => (\n  <div className=\"workspace\">\n    <header className=\"header\">\n      <h2 className=\"current-user\">\n        Signed in as {person.name() || 'nameless person'}\n      </h2>\n      <Button onClick={signOut}>Sign out</Button>\n    </header>\n    <div className=\"stage\">\n      <Canvas\n        canvasRef={canvasRef}\n        currentTool={currentTool}\n        fetchPainting={fetchPainting}\n      />\n      {isFetching && (\n        <div className=\"canvas-guard guard\">\n          <Loader />\n        </div>\n      )}\n    </div>\n    <footer className=\"footer\">\n      <Tools currentTool={currentTool} setCurrentTool={setCurrentTool} />\n      <Button onClick={savePainting} disabled={isSaving}>\n        Save\n      </Button>\n    </footer>\n  </div>\n);\n\nexport default Workspace;\n","import React, { FC, MouseEvent } from 'react';\n\nimport Button from '../button';\n\nimport './style.css';\n\nimport logo from '../../logo.svg';\n\ntype SplashProps = {\n  signIn: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Splash: FC<SplashProps> = ({ signIn }) => (\n  <header className=\"splash\">\n    <img src={logo} className=\"splash-logo\" alt=\"logo\" />\n    <Button onClick={signIn}>Sign in/up with Blockstack</Button>\n  </header>\n);\n\nexport default Splash;\n","import React, { useState, MouseEvent, useRef, useEffect } from 'react';\nimport { AppConfig, Person, UserSession } from 'blockstack';\n\nimport Workspace from '../workspace';\nimport Splash from '../splash';\nimport { ToolType } from '../tools';\n\nimport './style.css';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\nconst userSession = new UserSession({ appConfig });\n\nexport default function App() {\n  const [currentTool, setCurrentTool] = useState(ToolType.Paint);\n  const [isFetching, setIsFetching] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!userSession.isSignInPending()) {\n      return;\n    }\n\n    userSession.handlePendingSignIn().then((/* userData */) => {\n      const { origin, pathname } = window.location;\n      window.location.assign(`${origin}${pathname}`);\n    });\n  });\n\n  function signIn(event: MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    /**\n     * @see: https://github.com/zone117x/blockstack-monero/blob/master/src/main.ts#L40-L46\n     */\n    const { origin, pathname } = window.location;\n    userSession.redirectToSignIn(\n      `${origin}${pathname}`,\n      `${origin}${pathname}manifest.json`,\n    );\n  }\n\n  function signOut(event: MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    userSession.signUserOut();\n    const { origin, pathname } = window.location;\n    window.location.assign(`${origin}${pathname}`);\n  }\n\n  function fetchPainting() {\n    const { current } = canvasRef;\n\n    setIsFetching(true);\n    return (!current\n      ? Promise.resolve(JSON.stringify({}))\n      : userSession.getFile('painting.json', {\n          decrypt: false,\n        })\n    ).then(file => {\n      setIsFetching(false);\n      return file as string;\n    });\n  }\n\n  function savePainting(event: MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    const { current } = canvasRef;\n    if (!current) {\n      return;\n    }\n\n    setIsSaving(true);\n    userSession\n      .putFile(\n        'painting.json',\n        JSON.stringify({\n          data: current.toDataURL('image/png'),\n          createdAt: Date.now(),\n        }),\n        {\n          encrypt: false,\n        },\n      )\n      .then(() => {\n        setIsSaving(false);\n      });\n  }\n\n  return (\n    <div className=\"app\">\n      {userSession.isUserSignedIn() ? (\n        <Workspace\n          currentTool={currentTool}\n          canvasRef={canvasRef}\n          fetchPainting={fetchPainting}\n          isFetching={isFetching}\n          isSaving={isSaving}\n          person={new Person(userSession.loadUserData().profile)}\n          savePainting={savePainting}\n          setCurrentTool={setCurrentTool}\n          signOut={signOut}\n        />\n      ) : (\n        <Splash signIn={signIn} />\n      )}\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\nimport * as serviceWorker from './service-worker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}