{"version":3,"sources":["logo.svg","components/tools/index.tsx","components/loader/index.tsx","components/button/index.tsx","components/icons/paint/index.tsx","components/icons/erase/index.tsx","components/canvas/index.tsx","components/workspace/index.tsx","components/splash/index.tsx","components/app/index.tsx","service-worker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ToolType","Loader","react_default","a","createElement","className","Button","_ref","children","disabled","onClick","loader","Paint","width","height","viewBox","preserveAspectRatio","xmlns","d","Erase","Tools","currentTool","setCurrentTool","type","id","name","checked","onChange","htmlFor","paint","erase","Canvas","state","canvasContext","canvasRect","isPainting","prevX","prevY","handleMouse","event","preventDefault","buttons","_this","setState","mousePaint","clientX","clientY","handleTouch","touches","length","touchPaint","Array","from","_touches$reduce","reduce","acc","touch","current","props","canvasRef","_this$state","ctx","x","y","canvas","console","warn","fillX","fillY","beginPath","moveTo","lineTo","stroke","_this2","this","_this$props","fetchPainting","then","file","data","JSON","parse","img","Image","src","onload","drawImage","getContext","getBoundingClientRect","strokeStyle","lineWidth","lineCap","lineJoin","ref","onMouseEnter","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","Component","Workspace","isFetching","isSaving","person","savePainting","signOut","components_button","tools","Splash","signIn","logo","alt","appConfig","AppConfig","userSession","UserSession","App","React","createRef","_window$location","window","location","origin","pathname","redirectToSignIn","concat","signUserOut","_window$location2","assign","putFile","stringify","toDataURL","createdAt","Date","now","encrypt","getFile","decrypt","Promise","resolve","isSignInPending","handlePendingSignIn","_window$location3","isUserSignedIn","workspace","Person","loadUserData","profile","splash","Boolean","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.719b18cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02b2068a.svg\";","import React, { FC } from 'react';\nimport './style.css';\nimport Paint from '../icons/paint';\nimport Erase from '../icons/erase';\n\nexport enum ToolType {\n  Paint = 'paint',\n  Erase = 'erase',\n}\n\ntype ToolsProps = {\n  currentTool: ToolType;\n  setCurrentTool: (tool: ToolType) => void;\n};\n\nconst Tools: FC<ToolsProps> = ({ currentTool, setCurrentTool }) => (\n  <ul className=\"tools\">\n    <li>\n      <input\n        type=\"radio\"\n        id=\"paint\"\n        name=\"tools\"\n        checked={currentTool === ToolType.Paint}\n        onChange={() => setCurrentTool(ToolType.Paint)}\n      />\n      <label htmlFor=\"paint\">\n        <Paint />\n      </label>\n    </li>\n    <li>\n      <input\n        type=\"radio\"\n        id=\"erase\"\n        name=\"tools\"\n        checked={currentTool === ToolType.Erase}\n        onChange={() => setCurrentTool(ToolType.Erase)}\n      />\n      <label htmlFor=\"erase\">\n        <Erase />\n      </label>\n    </li>\n  </ul>\n);\n\nexport default Tools;\n","import React, { FC } from 'react';\nimport './style.css';\n\ntype LoaderProps = {};\n\nconst Loader: FC<LoaderProps> = () => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default Loader;\n","import React, { FC, ButtonHTMLAttributes } from 'react';\n\nimport Loader from '../loader';\n\nimport './style.css';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {};\n\nconst Button: FC<ButtonProps> = ({ children, disabled, onClick }) => (\n  <button className=\"button\" onClick={onClick} disabled={disabled}>\n    {children}\n    {disabled && <Loader />}\n  </button>\n);\n\nexport default Button;\n","import React, { FC } from 'react';\nimport '../style.css';\n\ntype PaintProps = {};\n\nconst Paint: FC<PaintProps> = () => (\n  <svg\n    className=\"icon paint\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2zM5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6l1.95-2zm-8.9 8.91L12 7.32l2.7 2.7-5.6 5.6-3 .28.27-2.99z\" />\n  </svg>\n);\n\nexport default Paint;\n","import React, { FC } from 'react';\nimport '../style.css';\n\ntype EraseProps = {};\n\nconst Erase: FC<EraseProps> = () => (\n  <svg\n    className=\"icon erase\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"xMidYMid meet\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2zm-.009-17.942h-.09l-4.17.38a2 2 0 0 0-1.21.57l-9 9a1.92 1.92 0 0 0 .07 2.71l2.74 2.74a2 2 0 0 0 2.66.07l9-9a2 2 0 0 0 .57-1.21l.43-4.17a1 1 0 0 0-1-1.09zm-10.27 14l-2.73-2.73 2-1.95 2.68 2.68-1.95 2zm8.9-8.91l-5.63 5.59-2.7-2.7 5.6-5.6 3-.28-.27 2.99z\" />\n  </svg>\n);\n\nexport default Erase;\n","import React, { Component, MouseEvent, RefObject, TouchEvent } from 'react';\n\nimport './style.css';\nimport { ToolType } from '../tools';\n\ntype CanvasProps = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  currentTool: ToolType;\n  fetchPainting: () => Promise<string | ArrayBuffer>;\n};\n\ntype CanvasState = {\n  canvasContext: CanvasRenderingContext2D | null;\n  canvasRect: ClientRect | DOMRect | null;\n  isPainting: boolean;\n  prevX: number;\n  prevY: number;\n};\n\nclass Canvas extends Component<CanvasProps, CanvasState> {\n  public state = {\n    canvasContext: null,\n    canvasRect: null,\n    isPainting: false,\n    prevX: -1,\n    prevY: -1,\n  };\n\n  public componentDidMount() {\n    const {\n      canvasRef: { current },\n      fetchPainting,\n    } = this.props;\n\n    if (!(current && fetchPainting)) {\n      return;\n    }\n\n    fetchPainting().then(file => {\n      const { data } = JSON.parse((file as string) || '{}');\n\n      if (!data) {\n        return;\n      }\n\n      const { canvasContext } = this.state;\n\n      if (!canvasContext) {\n        return;\n      }\n\n      /**\n       * casting because TypeScript can't follow these being set and so thinks\n       * that they're the 'never' type\n       *\n       * @see: https://github.com/Microsoft/TypeScript/issues/11498\n       */\n      const ctx = (canvasContext as unknown) as CanvasRenderingContext2D;\n\n      const img = new Image(current.width, current.height);\n      img.src = data;\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0);\n      };\n    });\n\n    this.setState({\n      canvasContext: current.getContext('2d'),\n      canvasRect: current.getBoundingClientRect(),\n    });\n  }\n\n  public componentDidUpdate() {\n    const { currentTool } = this.props;\n    const { canvasContext } = this.state;\n\n    if (!canvasContext) {\n      return;\n    }\n\n    /**\n     * casting because TypeScript can't follow these being set and so thinks\n     * that they're the 'never' type\n     *\n     * @see: https://github.com/Microsoft/TypeScript/issues/11498\n     */\n    const ctx = (canvasContext as unknown) as CanvasRenderingContext2D;\n    ctx.strokeStyle = currentTool === ToolType.Paint ? 'black' : 'white';\n    ctx.lineWidth = currentTool === ToolType.Paint ? 4 : 24;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }\n\n  public render() {\n    const { canvasRef } = this.props;\n\n    return (\n      <canvas\n        ref={canvasRef}\n        className=\"canvas\"\n        width=\"1080\"\n        height=\"1080\"\n        // mouse event handlers\n        onMouseEnter={this.handleMouse}\n        onMouseDown={this.handleMouse}\n        onMouseMove={this.mousePaint}\n        onMouseUp={this.handleMouse}\n        onMouseLeave={this.handleMouse}\n        // touch event handlers\n        onTouchStart={this.handleTouch}\n        onTouchMove={this.touchPaint}\n        onTouchEnd={this.handleTouch}\n      />\n    );\n  }\n\n  private handleMouse = (event: MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    const isPainting = event.buttons !== 0;\n    this.setState({ isPainting, prevX: -1, prevY: -1 });\n  };\n\n  private mousePaint = (event: MouseEvent<HTMLCanvasElement>) => {\n    event.preventDefault();\n    this.paint(event.clientX, event.clientY);\n  };\n\n  private handleTouch = (event: TouchEvent<HTMLCanvasElement>) => {\n    /**\n     * Unable to preventDefault inside passive event listener due to target\n     * being treated as passive.\n     *\n     * @see: https://www.chromestatus.com/features/5093566007214080\n     */\n    // event.preventDefault();\n    const isPainting = event.touches.length !== 0;\n    this.setState({ isPainting, prevX: -1, prevY: -1 });\n  };\n\n  private touchPaint = (event: TouchEvent<HTMLCanvasElement>) => {\n    /**\n     * Unable to preventDefault inside passive event listener due to target\n     * being treated as passive.\n     *\n     * @see: https://www.chromestatus.com/features/5093566007214080\n     */\n    // event.preventDefault();\n    const touches = Array.from(event.touches);\n\n    // handle multiple touches by averaging them, will sort of draw \"in the\n    // middle\" of all the touches\n    const { clientX, clientY } = touches.reduce(\n      (acc, touch) => ({\n        clientX: acc.clientX + touch.clientX,\n        clientY: acc.clientY + touch.clientY,\n      }),\n      {\n        clientX: 0,\n        clientY: 0,\n      },\n    );\n\n    this.paint(clientX / touches.length, clientY / touches.length);\n  };\n\n  private paint = (clientX: number, clientY: number) => {\n    const {\n      canvasRef: { current },\n    } = this.props;\n    const { canvasContext, canvasRect, isPainting, prevX, prevY } = this.state;\n\n    if (!(current && canvasContext && canvasRect && isPainting)) {\n      return;\n    }\n\n    /**\n     * casting because TypeScript can't follow these being set and so thinks\n     * that they're the 'never' type\n     *\n     * @see: https://github.com/Microsoft/TypeScript/issues/11498\n     */\n    const ctx = (canvasContext as unknown) as CanvasRenderingContext2D;\n    const { x, y, width, height } = (canvasRect as unknown) as DOMRect;\n\n    if (ctx.canvas !== current) {\n      console.warn(\n        \"refs out of sync, rendering into a canvas that isn't in the DOM\",\n      );\n    }\n\n    const fillX = (clientX - x) * (current.width / width);\n    const fillY = (clientY - y) * (current.height / height);\n\n    if (prevX === -1 && prevY === -1) {\n      ctx.beginPath();\n    } else {\n      ctx.moveTo(prevX, prevY);\n      ctx.lineTo(fillX, fillY);\n      ctx.stroke();\n    }\n\n    this.setState({ prevX: fillX, prevY: fillY });\n  };\n}\n\nexport default Canvas;\n","import React, { FC, MouseEvent, RefObject } from 'react';\nimport { Person } from 'blockstack';\n\nimport Button from '../button';\nimport Canvas from '../canvas';\nimport Loader from '../loader';\n\nimport './style.css';\nimport Tools, { ToolType } from '../tools';\n\ntype WorkspaceProps = {\n  canvasRef: RefObject<HTMLCanvasElement>;\n  currentTool: ToolType;\n  fetchPainting: () => Promise<string | ArrayBuffer>;\n  isFetching: boolean;\n  isSaving: boolean;\n  person: Person;\n  savePainting: (event: MouseEvent<HTMLButtonElement>) => void;\n  setCurrentTool: (tool: ToolType) => void;\n  signOut: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Workspace: FC<WorkspaceProps> = ({\n  canvasRef,\n  currentTool,\n  fetchPainting,\n  isFetching,\n  isSaving,\n  person,\n  savePainting,\n  setCurrentTool,\n  signOut,\n}) => (\n  <div className=\"workspace\">\n    <header className=\"header\">\n      <h2 className=\"current-user\">\n        Signed in as {person.name() || 'nameless person'}\n      </h2>\n      <Button onClick={signOut}>Sign out</Button>\n    </header>\n    <div className=\"stage\">\n      <Canvas\n        canvasRef={canvasRef}\n        currentTool={currentTool}\n        fetchPainting={fetchPainting}\n      />\n      {isFetching && (\n        <div className=\"canvas-guard guard\">\n          <Loader />\n        </div>\n      )}\n    </div>\n    <footer className=\"footer\">\n      <Tools currentTool={currentTool} setCurrentTool={setCurrentTool} />\n      <Button onClick={savePainting} disabled={isSaving}>\n        Save\n      </Button>\n    </footer>\n  </div>\n);\n\nexport default Workspace;\n","import React, { FC, MouseEvent } from 'react';\n\nimport Button from '../button';\n\nimport './style.css';\n\nimport logo from '../../logo.svg';\n\ntype SplashProps = {\n  signIn: (event: MouseEvent<HTMLButtonElement>) => void;\n};\n\nconst Splash: FC<SplashProps> = ({ signIn }) => (\n  <header className=\"splash\">\n    <img src={logo} className=\"splash-logo\" alt=\"logo\" />\n    <Button onClick={signIn}>Sign in/up with Blockstack</Button>\n  </header>\n);\n\nexport default Splash;\n","import React, { Component, MouseEvent } from 'react';\nimport { AppConfig, Person, UserSession } from 'blockstack';\n\nimport Workspace from '../workspace';\nimport Splash from '../splash';\nimport { ToolType } from '../tools';\n\nimport './style.css';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\nconst userSession = new UserSession({ appConfig });\n\ntype AppState = {\n  currentTool: ToolType;\n  isFetching: boolean;\n  isSaving: boolean;\n};\n\nclass App extends Component<{}, AppState> {\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n\n  public state = {\n    currentTool: ToolType.Paint,\n    isFetching: false,\n    isSaving: false,\n  };\n\n  public signIn = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    /**\n     * @see: https://github.com/zone117x/blockstack-monero/blob/master/src/main.ts#L40-L46\n     */\n    const { origin, pathname } = window.location;\n    userSession.redirectToSignIn(\n      `${origin}${pathname}`,\n      `${origin}${pathname}manifest.json`,\n    );\n  };\n\n  public signOut = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    userSession.signUserOut();\n    const { origin, pathname } = window.location;\n    window.location.assign(`${origin}${pathname}`);\n  };\n\n  public savePainting = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    const { current } = this.canvasRef;\n\n    if (!current) {\n      return;\n    }\n\n    this.setState({ isSaving: true });\n    userSession\n      .putFile(\n        'painting.json',\n        JSON.stringify({\n          data: current.toDataURL('image/png'),\n          createdAt: Date.now(),\n        }),\n        {\n          encrypt: false,\n        },\n      )\n      .then(() => {\n        this.setState({ isSaving: false });\n      });\n  };\n\n  public fetchPainting = () => {\n    const { current } = this.canvasRef;\n\n    this.setState({ isFetching: true });\n    return (!current\n      ? Promise.resolve(JSON.stringify({}))\n      : userSession.getFile('painting.json', {\n          decrypt: false,\n        })\n    ).then(file => {\n      this.setState({ isFetching: false });\n      return file;\n    });\n  };\n\n  public setCurrentTool = (currentTool: ToolType) => {\n    this.setState({ currentTool });\n  };\n\n  public UNSAFE_componentWillMount() {\n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then((/* userData */) => {\n        const { origin, pathname } = window.location;\n        window.location.assign(`${origin}${pathname}`);\n      });\n    }\n  }\n\n  public render() {\n    const { currentTool, isFetching, isSaving } = this.state;\n\n    return (\n      <div className=\"app\">\n        {userSession.isUserSignedIn() ? (\n          <Workspace\n            currentTool={currentTool}\n            canvasRef={this.canvasRef}\n            fetchPainting={this.fetchPainting}\n            isFetching={isFetching}\n            isSaving={isSaving}\n            person={new Person(userSession.loadUserData().profile)}\n            savePainting={this.savePainting}\n            setCurrentTool={this.setCurrentTool}\n            signOut={this.signOut}\n          />\n        ) : (\n          <Splash signIn={this.signIn} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\nimport * as serviceWorker from './service-worker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}